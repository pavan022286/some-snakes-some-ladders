name: Some Snakes Some Ladders

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-4-dev pkg-config build-essential gcc g++ lcov

      - name: Build with Coverage
        run: |
          gcc -fprofile-arcs -ftest-coverage `pkg-config --cflags gtk4` -o snakeLadders main.c game_setting.c generate_board.c drawSnakesAndLadders.c `pkg-config --libs gtk4` -lm
          chmod +x snakeLadders

      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: Some Snakes Some Ladders
          path: ./snakeLadders

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-4-dev pkg-config build-essential gcc g++ lcov

      - name: Build Tests
        run: |
          gcc -fprofile-arcs -ftest-coverage `pkg-config --cflags gtk4` -o testGame testApp.c game_setting.c generate_board.c drawSnakesAndLadders.c `pkg-config --libs gtk4` -lm
          chmod +x testGame

      - name: Run Tests
        run: |
          ./testGame > test_results.txt 2>&1 # Capture stdout and stderr
          ls -al # Check for coverage files
          gcov testGame-testApp.c; gcov testGame-game_setting.c; gcov testGame-generate_board.c; gcov testGame-drawSnakesAndLadders.c # Generate coverage reports

      - name: Upload Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: Test Results
          path: ./test_results.txt

      - name: Upload Coverage Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: Coverage Reports
          path: ./*.gcov
